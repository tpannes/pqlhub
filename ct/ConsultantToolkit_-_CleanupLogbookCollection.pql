/* PQL script "CleanupLogbookCollection" created 2012 by TimoP
 * Version 1.0
 * 
 * Description:  
 *   The script checks the logbook collection for empty "MissingClassTemplateInfo" objects and deletes them.
 *   For non-empty "MissingClassTemplateInfo" objects, method "DeleteDefectObjects" is called
 *   It can be used e.g. to find out how big an AFP would be after exporting it to the filesystem.
 *
 * Return: 
 *   Number of non-empty "MissingClassTemplateInfo" objects before cleanup
 * 
 */

//@MSG_ERROR   = 'PFGM0001E';
//@MSG_WARNING = 'PFGM0002W';
@MSG_INFO    = 'PFGM0003I';

@self         = $self.$id,$displayname,$node,$ClassGUID,$Inheritance,*;
@class        = @self\$ClassGUID.$InternalName;
@method       = 'CleanupLogbookCollection';
@verbodeLevel = @self.VerboseLevel;

@logbook_collection = \{266eeb62-18da-34cf-aa4c-705bfa47278c}.$id,$node;
@MissingClassesOrTemplates = @logbook_collection\(MissingClassesOrTemplates:).$id;
@dc = @logbook_collection.$node;

// 1. delete empty MissingClassTemplateInfo objects
@MCTIset = @MissingClassesOrTemplates\InfoObjects(*:\ToNodeSpecificInfoObjects.UsedFromCount==0).$id,\ToNodeSpecificInfoObjects.UsedFromCount as Count;
ForEach @MCTI in (@MCTIset)
  if (@verbodeLevel>0) then
    message(@MSG_INFO, '['+@class+'::'+@method+'] Deleting empty MissingClassTemplateInfo '+@MCTI); 
  endif
  @dc: @MCTI.DeleteReference(@MissingClassesOrTemplates);
Next 

// 2. delete defects objects on all non-empty MissingClassTemplateInfo objects
@MCTIset = @MissingClassesOrTemplates\InfoObjects(*:\ToNodeSpecificInfoObjects.UsedFromCount>0).$id;
ForEach @MCTI in (@MCTIset)
  @MCTIinfo  = @MCTI\ToNodeSpecificInfoObjects.$id;
  if (@verbodeLevel>0) then
    message(@MSG_INFO, '['+@class+'::'+@method+'] Calling "DeleteDefectObjects" on '+@MCTIinfo); 
  endif
  @dc($ie): @MCTIinfo.start('DeleteDefectObjects');
Next 

return count(@MCTIset);