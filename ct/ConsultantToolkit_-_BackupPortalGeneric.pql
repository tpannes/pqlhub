/* PQL script "BackupPortalGeneric" created 2012 by TimoP
 * Version 1.0
 * 
 * Description:  
 *   The script exports all resources of an ISIS webserver into a specified folder in the filesystem.
 *   This includes static data (HTML, CSS, images, javascript) as well as all PPL layouts that are found 
 *   underneath the webserver. 
 * 
 * Input parameters:
 *   Param1:  webserver OID
 *   Param2:  export path
 *   Param3:  flag defining whether a new subfolder with timestamp should be created in export directory
 *   Param4:  verbose level (0..9)
 *
 * Return: 
 *   Number of exported files
 * 
 */

//@MSG_ERROR   = 'PFGM0001E';
//@MSG_WARNING = 'PFGM0002W';
@MSG_INFO    = 'PFGM0003I';

@self   = $self.$id,$displayname,$node,$classGUID,$inheritance,*;
@node   = @self.$node;
@class  = @self\$ClassGUID.$internalName;
@method = 'BackupPortalGeneric';


// get input parameters
@webserver      = ToObjRef($param1);
@exportBasePath = $param2;
@verboseLevel   = $param4;
@createSubdir   = $param3;


// constants
@BINARY_EXPORT_OVERRIDE  = 8;
@BINARY_EXPORT_CREATEDIR = 1;
@BINARY_EXPORT_FLAGS = @BINARY_EXPORT_CREATEDIR + @BINARY_EXPORT_OVERRIDE;

@DIR_SEPARATOR_WINDOWS = '\';
@DIR_SEPARATOR_UNIX    = '/';


// calculate directory separator based on operating system of execution node
@nodeInformation = @node\(NodeInformation:).$id,*;
@env = fromMem(@nodeInformation.Environment);
@osPath = @env\$subset(*:.Name=='ISIS_OBJECT_SPACE').Value;
if (left(@osPath, 1)==@DIR_SEPARATOR_UNIX) then
  @dirSeparator = @DIR_SEPARATOR_UNIX;
else
  @dirSeparator = @DIR_SEPARATOR_WINDOWS;
endif
if (right(@exportBasePath, 1)!=@dirSeparator) then
  @exportBasePath += @dirSeparator;
endif


// create timeStamp if required
if (@createSubdir) then
  @timeStamp = DateTime();                   
  @timeStamp = ToString(@timeStamp);
  @timeStamp = Substitute(@timeStamp,":","");
  @timeStamp = Substitute(@timeStamp,"/","");
  @timeStamp = Substitute(@timeStamp," ","_");
  @timeStamp = Left(@timeStamp, Length(@timeStamp)-2);
  @exportBasePath = @exportBasePath + @timeStamp + @dirSeparator;
endif

// Start processing..
if (@verboseLevel>0) then
  message(@MSG_INFO, '['+@class+'::'+@method+'] Exporting all resources of webserver '+@webserver.$id+' to '+@exportBasePath+'...');
endif

@exportedFilesCount = 0;

// 1. export PPL layouts
@layoutCollections = @webserver\(HTMLLayoutCollection:).$id,$internalName;
forEach @lc in (@layoutCollections)
  @lcName = @lc.$InternalName;
  if (@verboseLevel>1) then
    message(@MSG_INFO, '  processing PPL files within layout collection "'+@lcName+'" ..');
  endif
  @exportPath = @exportBasePath + @lcName + @dirSeparator;
  @pplLayouts = @lc\(dataHtmlBinary:).$id,$name,TargetName;
  foreach @pplLayout in (@pplLayouts)
    @self.BinaryExportData = @pplLayout.TargetName;
    @fileName = @pplLayout.$name;
    @self.BinaryExportExtended('BinaryExportData',@exportPath + @fileName,$Invalid,$Invalid,$Invalid,@BINARY_EXPORT_FLAGS);
    @exportedFilesCount++;
  next
next


// 2. export static data (HTML, css, images, javascript)
@webfolders = @webserver\$tree(FOLDER:).$name,(\$parentTree(FOLDER:).$name as path);
forEach @wf in (@webfolders)
  @pathComponents = @wf.path;
  @idx = count(@pathComponents);
  @pathCombined = "";
  while (@idx > 0)
    @pathCombined += @pathComponents[@idx] + @dirSeparator;
    @idx--;
  next
  @pathCombined += @wf.$name + @dirSeparator;
  if (@verboseLevel>1) then
    message(@MSG_INFO, '  processing folder "'+@pathCombined+'" ..');
  endif
  @exportPath = @exportBasePath + @pathCombined;
  @resources = @wf\(DATA:).$id,$name,Targetname;
  forEach @rc in (@resources)
    @self.BinaryExportData = @rc.TargetName;
    @fileName = @rc.$name;
    @self.BinaryExportExtended('BinaryExportData',@exportPath + @fileName,$Invalid,$Invalid,$Invalid,@BINARY_EXPORT_FLAGS);
    @exportedFilesCount++;
  next
next

if (@verboseLevel>0) then
  message(@MSG_INFO, '['+@class+'::'+@method+'] Finished. '+@exportedFilesCount+' files exported.');
endif

return @exportedFilesCount;