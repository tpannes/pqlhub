@self  = $self.$id,$node,$ClassGuid,*;
@class = @self.$classGuid;

//@MSG_ERROR   = 'PFGM0001E';
//@MSG_WARNING = 'PFGM0002W';
@MSG_INFO    = 'PFGM0003I';


@dataObjects   = value(@self.BinAttrFunctionsSourceObjects);
@attrSelection = value(@self.BinAttrFunctionsAttrSelection);
@unit          = @self.BinaryAttributeSizeUnit; // 1: Byte, 2: KB, 3: MB
@verboseLevel  = @self.VerboseLevel;

@subst = @class\$AttrDef(.$AttrNameIntern=='BinaryAttributeSizeUnit').$substitutions[@unit];
@unitName    = '';
@unitName = right(@subst, length(@subst)- pos(' ', @subst));


@result = array();
foreach @obj in (@dataObjects)
  @objName = @obj.$InternalName;
  @attributes = @obj\$Inheritance\$AttrDef(.$AttrNameIntern like @attrSelection).$AttrNameIntern,$Type GroupBy $AttrNameIntern;
  if (count(@attributes)==0) then
    if (@verboseLevel>2) then
        message(@MSG_INFO, ' Object "'+@objName+'" ['+@obj+'] does not have any binary attributes.');
    endif
  else
    foreach @attr in (@attributes)
      @attr = @attr.$AttrNameIntern;
      @fileSize = fromMem(@self.GetBinAttrSizeGeneric(@obj, @attr, @unit).Return1);
      if (@unit>1) then
        @fileSize = format("@v.f:1.3@", @fileSize);
      endif
      @row = array(@obj, @objName, @attr, @fileSize + ' '+@unitName);
      @result = insertValue(@result, @row);
      if (@verboseLevel>0) then
        message(@MSG_INFO, 'Binary attribute "'+@attr+'" of object '+@obj+' has a size of '+@fileSize+' '+@unitName);
      endif
    next
  endif
next

return createSet(@result);