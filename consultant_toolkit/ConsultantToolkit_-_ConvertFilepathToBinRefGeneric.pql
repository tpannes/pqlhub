/* v1.0
 * PQL script "ConvertFilepathToBinRefGeneric" created 2012 by TimoP
 * 
 * Description:  
 *   The script calculates the content string of a binary attribute out of a given path to a *.bi4 file
 *   The input path can be either a full path like "D:\objects_dc\binaries\00000000\00a95bdd\000001\11.bi4" or a relative one
 *   as long as it contains the necessary subfolders underneath "binaries" folder. Both windows and unix paths are supported. 
 *   Example: 
 *     A path like "/00000025/0146ca2b/0002d0/8d.bi4" would be translated into "$$Binary$$ 25.25.146ca2b.2d08d"
 * 
 * Input: 
 *   param1: path to bi4 file (full or relative path)
 *   param2: verbose level (optional)
 *
 * Return: 
 *   content of binary attribute, e.g. "$$Binary$$ 25.25.146ca2b.2d08d"
 *
 */

//@MSG_ERROR   = 'PFGM0001E';
@MSG_WARNING = 'PFGM0002W';
@MSG_INFO    = 'PFGM0003I';


@self   = $self.$id,$displayname,$node,$ClassGUID,*;
@class  = @self\$ClassGUID.$InternalName;
@method = 'ConvertFilepathToBinRefGeneric';


@filePath     = $param1; 
@verboseLevel = toInt($param2);


// check input parameters
if (isInvalid(@filePath)) then
  message(@MSG_WARNING, '['+@class+'::'+@method+'] File path (param1) is empty'); 
  return "";
endif

if (@verboseLevel>3) then
  message(@MSG_INFO, '['+@class+'::'+@method+'] File path retrieved via param1: "'+@filePath+'"'); 
endif


// constants
@DIR_SEPARATOR_UNIX    = '/';
@DIR_SEPARATOR_WINDOWS = '\';
@BINARIES_FOLDER_NAME  = 'binaries';
@BINATTR_VALUE_PREFIX  = '$$Binary$$ ';


// check which directory separator should be used
@dirSeparator = @DIR_SEPARATOR_UNIX; // default
if (pos(@DIR_SEPARATOR_WINDOWS, @filePath)>0) then
  @dirSeparator = @DIR_SEPARATOR_WINDOWS;
endif


// check if full or relative path has been supplied as input parameter and cut off unnecessary pieces
@binaryFolderNamePosWithinInput = pos(@BINARIES_FOLDER_NAME, @filePath);
if (@binaryFolderNamePosWithinInput>0) then
  @filePath = subStr(@filePath, @binaryFolderNamePosWithinInput + length(@BINARIES_FOLDER_NAME) + length(@dirSeparator));
else 
  if (left(@filePath,1)==@dirSeparator) then
    @filePath = right(@filePath, length(@filePath)-1);
  endif 
endif
if (@verboseLevel>3) then
  message(@MSG_INFO, '['+@class+'::'+@method+'] File path used for calculation: "'+@filePath+'"'); 
endif


// calculation
@components = split(toString(@filePath), @dirSeparator);
@lastComponent = @components[count(@components)];
@lastComponent = left(@lastComponent, Length(@lastComponent)-4);
@components = setValue(@components, @lastComponent, 4);

@idx = 1;
while (@idx <= count(@components))
  @oidPart = substitute(trimLeft(substitute(@components[@idx],'0', ' ')), ' ', '0');
  @components = setValue(@components, @oidPart, @idx);
  @idx++;
next
if (@components[1]=="") then // special handling for DC
  @components = setValue(@components, "0", 1);
endif



@binAttrValue = @BINATTR_VALUE_PREFIX + @components[1] + '.' + @components[1] + '.' + @components[2] + '.' + @components[3]+ @components[4];

if (@verboseLevel>3) then
  message(@MSG_INFO, '['+@class+'::'+@method+'] Binary attribute value: "'+@binAttrValue+'"'); 
endif

return @binAttrValue;
